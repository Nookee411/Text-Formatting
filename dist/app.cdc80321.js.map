{"version":3,"sources":["src/app/index.js"],"names":["myStorage","window","localStorage","onload","textArea","value","getItem","intervalID","button","document","getElementById","switchButton","addEventListener","style","backgroundColor","color","Timer","buttonStart","timerInput","timerStart","timerValue","defaultValue","stop","start","innerText","rawTime","toString","hours","split","minutes","seconds","clearInterval","time","Math","abs","stringTime","setInterval","alert","timer","countSymbols","text","total","updateSymbols","textBox","length","getSelectionText","getSelection","selection","type","createRange","handleSelection","selectedSymbols","replaceAll","setItem","activeElement","isLetter","c","toLowerCase","toUpperCase"],"mappings":"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","file":"app.cdc80321.js","sourceRoot":"..","sourcesContent":["const myStorage = window.localStorage;\r\n\r\nwindow.onload = () => {\r\n  textArea.value = myStorage.getItem('text');\r\n};\r\nlet button = document.getElementById('convert');\r\nlet intervalID;\r\nlet switchButton = document.getElementById('switchCase');\r\n\r\nswitchButton.addEventListener('click', () => {\r\n  if (textArea.style.backgroundColor === 'rgb(51, 51, 51)') {\r\n    textArea.style.backgroundColor = '#fff';\r\n    textArea.style.color = '#333';\r\n  } else {\r\n    textArea.style.backgroundColor = '#333';\r\n    textArea.style.color = '#fff';\r\n  }\r\n});\r\n\r\nclass Timer {\r\n  #isTimerGoes;\r\n  constructor(buttonStart, timerInput) {\r\n    this.timerStart = document.getElementById(buttonStart);\r\n    this.timerValue = document.getElementById(timerInput);\r\n    this.timerValue.defaultValue = '00:30:00';\r\n    this.#isTimerGoes = false;\r\n    this.timerStart.addEventListener('click', () => {\r\n      if (!this.#isTimerGoes) {\r\n        this.start();\r\n      } else {\r\n        this.stop();\r\n      }\r\n    });\r\n  }\r\n  static #formatTime(time) {\r\n    if (Math.abs(time) < 10) return '0' + time;\r\n    return time;\r\n  }\r\n\r\n  start() {\r\n    this.#isTimerGoes = true;\r\n    this.timerStart.innerText = 'Стоп';\r\n    let rawTime = this.timerValue.value.toString();\r\n    rawTime = rawTime.split(':');\r\n    let hours = +rawTime[0] | 0;\r\n    let minutes = +rawTime[1] | 0;\r\n    let seconds = +rawTime[2] | 0;\r\n    this.#tick(hours, minutes, seconds);\r\n  }\r\n  stop() {\r\n    this.#isTimerGoes = false;\r\n    this.timerStart.innerText = 'Старт';\r\n    clearInterval(intervalID);\r\n  }\r\n  #tick(hours, minutes, seconds) {\r\n    let stringTime =\r\n      Timer.#formatTime(hours) +\r\n      ':' +\r\n      Timer.#formatTime(minutes) +\r\n      ':' +\r\n      Timer.#formatTime(seconds);\r\n    this.timerValue.value = stringTime;\r\n\r\n    intervalID = setInterval(() => {\r\n      seconds--;\r\n      if (seconds <= 0) {\r\n        if (minutes === 0 && hours === 0) {\r\n          this.stop();\r\n          alert('Timer Out!');\r\n        }\r\n        if (minutes === 0) {\r\n          hours--;\r\n          minutes = 60;\r\n        }\r\n        minutes--;\r\n        seconds = 59;\r\n      }\r\n\r\n      stringTime =\r\n        Timer.#formatTime(hours) +\r\n        ':' +\r\n        Timer.#formatTime(minutes) +\r\n        ':' +\r\n        Timer.#formatTime(seconds);\r\n      this.timerValue.value = stringTime;\r\n    }, 1000);\r\n  }\r\n}\r\n\r\nlet timer = new Timer('button timer', 'timerCounter', 'timerOutput');\r\n\r\nbutton.addEventListener('click', () => {\r\n  let textBox = document.getElementById('textArea');\r\n  let text = textBox.value;\r\n  textBox.value = text.replaceAll(' \\n', '\\n');\r\n});\r\n\r\nfunction countSymbols(text) {\r\n  let total = 0;\r\n  for (let char of text) if (char !== ' ') total++;\r\n  return total;\r\n}\r\n\r\nfunction updateSymbols() {\r\n  let textBox = document.getElementById('textArea');\r\n  let text = textBox.value;\r\n  document.getElementById('totalSymbols').innerText = text.length;\r\n  document.getElementById('totalClearSymbols').innerText = countSymbols(text);\r\n}\r\n\r\nfunction getSelectionText() {\r\n  let text = '';\r\n  if (window.getSelection) {\r\n    text = window.getSelection().toString();\r\n  } else if (document.selection && document.selection.type !== 'Control') {\r\n    text = document.selection.createRange().text;\r\n  }\r\n  return text;\r\n}\r\n\r\nfunction handleSelection() {\r\n  const selectedSymbols = document.getElementById('selectedSymbols');\r\n  const text = getSelectionText();\r\n  if (text) selectedSymbols.innerText = text.length;\r\n  else selectedSymbols.innerText = countSymbols(text);\r\n}\r\n\r\nlet textArea = document.getElementById('textArea');\r\ntextArea.addEventListener('input', () => {\r\n  updateSymbols();\r\n  myStorage.setItem('text', textArea.value);\r\n});\r\n\r\ndocument.addEventListener('selectionchange', () => {\r\n  if (textArea === document.activeElement) handleSelection();\r\n});\r\n\r\nconst isLetter = (c) => c.toLowerCase() !== c.toUpperCase();\r\n"]}